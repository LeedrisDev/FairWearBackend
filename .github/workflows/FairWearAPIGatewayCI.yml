name: FairWear API Gateway CI

on:
  push:
    branches:
      - master
      - develop
      - feature/*
      - hotfix/*
      - release/*
      - fix/*
      
    paths:
      - 'FairWearGateway.API/**'
      - 'FairWearGateway.API.Tests/**'
      - '.github/workflows/FairWearAPIGatewayCI.yml'
      - 'Scripts/**'

jobs:
  linter:
    name: 'Linter'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK 7.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Cache Resharper CLI
        id: cache-resharper
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/tools
          key: resharper-cli
          restore-keys: resharper-cli

      - name: Install Resharper CLI
        if: steps.cache-resharper.outputs.cache-hit != 'true'
        run: |
          dotnet tool install JetBrains.ReSharper.GlobalTools --tool-path ~/.dotnet/tools
          export PATH=$PATH:~/.dotnet/tools
          
      - name: Run ReSharper InspectCode
        run: jb inspectcode FairWearGateway.API/FairWearGateway.API.csproj -o=resharper-report.xml -f=Xml -verbosity=INFO -no-swea

      - name: Check Resharper results
        run: |
          if grep -q 'Severity="WARNING"' resharper-report.xml; then cat resharper-report.xml && exit 1; fi
          if grep -q 'Severity="ERROR"' resharper-report.xml; then cat resharper-report.xml && exit 1; fi
          if grep -q 'Severity="SUGGESTION"' resharper-report.xml; then cat resharper-report.xml && exit 1; fi
          
      - uses: sarisia/actions-status-discord@v1
        if: always() && (job.status == 'failure' || job.status == 'cancelled')
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Linter on Gateway API"
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
    
    
  build:
    name: 'Build'
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK 7.0.x
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: '7.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-gateway-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-gateway-
            
      - name: Install dependencies
        run: dotnet restore FairWearGateway.API/FairWearGateway.API.csproj
        
      - name: Build
        run: dotnet build FairWearGateway.API/FairWearGateway.API.csproj --no-restore
        
      - uses: sarisia/actions-status-discord@v1
        if: always() && (job.status == 'failure' || job.status == 'cancelled')
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Build & Test Gateway API"
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
  
  
#  test:
#    name: 'Tests'
#    runs-on: ubuntu-latest
#    needs:
#      - linter
#      - build
#    steps:
#      - uses: actions/checkout@v3
#      - name: Setup .NET Core SDK 7.0.x
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: '7.0.x'
#
#      - name: Cache NuGet packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.nuget/packages
#          # Look to see if there is a cache hit for the corresponding requirements file
#          key: ${{ runner.os }}-nuget-gateway-tests-${{ hashFiles('**/packages.lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-nuget-gateway-tests-
#          
#      - name: 'Install dependencies'
#        run: |
#          dotnet restore FairWearGateway.API.Tests/FairWearGateway.API.Tests.csproj
#          dotnet restore FairWearGateway.API/FairWearGateway.API.csproj 
#  
#      - name: 'Run tests'
#        run: dotnet test --no-restore  --verbosity normal FairWearGateway.API.Tests/FairWearGateway.API.Tests.csproj
#
#      - name: 'Code Coverage'
#        run: ./Scripts/code-coverage-ci.sh -p FairWearGateway.API.Tests/FairWearGateway.API.Tests.csproj -t 60
#      
#      - uses: sarisia/actions-status-discord@v1
#        if: always()
#        with:
#          webhook: ${{ secrets.DISCORD_WEBHOOK }}
#          status: ${{ job.status }}
#          title: "Build & Test  FairWear Gateway API"
#          username: GitHub Actions
#          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          
  deploy:
    name: 'Deploy'
    needs:
      - linter
      - build
#      - test
    runs-on: ubuntu-latest
    if: contains(github.ref, 'release') || contains(github.ref, 'develop') || contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v3

      - name: Retrieve GITHUB_REF
        id: get_branch
        env:
          BRANCH: ${{ github.ref_name }}
        run: echo "::set-output name=tag::${BRANCH//\//_}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: https://docker-registry.leedrisdev.engineer
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./FairWearGateway.API/Dockerfile
          push: true
          tags: |
            docker-registry.leedrisdev.engineer/gateway_api:${{ steps.get_branch.outputs.tag }}-${{ github.run_number }}
            docker-registry.leedrisdev.engineer/gateway_api:latest

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "Deliver Gateway API to Registry"
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
