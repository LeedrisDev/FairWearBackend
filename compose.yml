services:
  
  reverse-proxy:
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - reverse-proxy-https-helper
    image: traefik:v2.10
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./TraefikConfig/TraefikFiles/traefik.yml:/etc/traefik/traefik.yml
      - ./TraefikConfig/TraefikFiles/tls.yml:/etc/traefik/tls.yml
      - ./TraefikConfig/Certs:/etc/ssl/traefik
    networks:
      - traefik-network
  
      
  gateway_api:
    container_name: gateway_api
    build:
      context: .
      dockerfile: FairWearGateway.API/Dockerfile
    restart: on-failure
    labels:
      - "traefik.docker.network=fairwearbackend_traefik-network"
      - "traefik.http.routers.gateway_api.rule=Host(`gateway.traefik.me`)"
      - "traefik.http.routers.gateway_api.tls=true"
    networks:
      - traefik-network
      - fairwear_internal_network
  
  
  brand_and_product_db:
    container_name: brand_and_product_db
    build:
      context: .
      dockerfile: Databases/BrandsAndProductsDatabase/Dockerfile
    restart: on-failure
    ports:
      - "5432:5432"
    networks:
      - fairwear_internal_network
  
  
  brand_and_product_api:
    container_name: brand_and_product_api
    build:
        context: .
        dockerfile: BrandAndProductDatabase.API/Dockerfile
    restart: on-failure
    ports:
      - "8081:80"
    networks: 
      - fairwear_internal_network
  
  
  product_data_retriever_api:
    container_name: product_data_retriever_api
    build:
        context: .
        dockerfile: FairWearProductDataRetriever.API/Dockerfile
    restart: on-failure
    ports:
      - "8082:80"
    networks:
      - fairwear_internal_network
  
  
  good_on_you_scrapper_api:
    container_name: good_on_you_scrapper_api
    build:
      context: .
      dockerfile: GoodOnYouScrapper.API/Dockerfile
    restart: on-failure
    ports:
      - "8083:80"
    networks:
      - fairwear_internal_network
  
  
  reverse-proxy-https-helper:
    container_name: reverse_proxy_https_helper
    image: alpine:3.17
    command: sh -c "cd /etc/ssl/traefik
      && wget traefik.me/cert.pem -O cert.pem
      && wget traefik.me/privkey.pem -O cert-key.pem"
    volumes:
      - ./TraefikConfig/Certs:/etc/ssl/traefik

networks:
  traefik-network:
  
  fairwear_internal_network: